/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vistas.Forms;

import Controlador.PacienteDAO;
import Modelo.Paciente;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author Usuario
 */
public class Historial3 extends javax.swing.JPanel {

    //Variable para agregar a la DB la seleccion del RadioButton
    private String opcionSeleccionada;
    ButtonGroup buttonGroup = new ButtonGroup();
    //Clasees que contienen los metodos para manejar la DB
    PacienteDAO paciente = new PacienteDAO();
    Paciente p = new Paciente();

    public Historial3() {
        initComponents();
        setOpaque(false);
        setVisible(true);

        //Agregando imagen para el boton guardar y redimensionandola -
        ImageIcon icono = new javax.swing.ImageIcon(getClass().getResource("/icon/guardar.png"));

        // Escalar la imagen al tamaño deseado (ajustar valores segun se necesite)
        Image imagen = icono.getImage();
        Image nuevaImagen = imagen.getScaledInstance(20, 20, java.awt.Image.SCALE_SMOOTH);

        btnGuardar.setIcon(new javax.swing.ImageIcon(nuevaImagen));


        ActionListener actionListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Obtener el botón seleccionado
                JRadioButton selectedButton = (JRadioButton) e.getSource();
                opcionSeleccionada = selectedButton.getText();
            }
        };


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        PanelRegistroMedico = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_procedimiento = new javax.swing.JTable();
        PanelDatosPersonales = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        box_cicatriz = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_vancouver = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        box_tratamiento_i = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_indicaciones = new javax.swing.JTextArea();
        btnAnterior = new javax.swing.JButton();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        PanelRegistroMedico.setBackground(new java.awt.Color(0, 102, 102));
        PanelRegistroMedico.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setBackground(new java.awt.Color(153, 153, 153));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("TABLA DE PROCEDIMIENTOS REALIZADOS");

        table_procedimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Fecha", "SOP", "Servicio", "Otros", "Procedimientos", "Medico"
            }
        ));
        jScrollPane2.setViewportView(table_procedimiento);

        javax.swing.GroupLayout PanelRegistroMedicoLayout = new javax.swing.GroupLayout(PanelRegistroMedico);
        PanelRegistroMedico.setLayout(PanelRegistroMedicoLayout);
        PanelRegistroMedicoLayout.setHorizontalGroup(
            PanelRegistroMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroMedicoLayout.createSequentialGroup()
                .addGroup(PanelRegistroMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRegistroMedicoLayout.createSequentialGroup()
                        .addGap(456, 456, 456)
                        .addComponent(jLabel7))
                    .addGroup(PanelRegistroMedicoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(689, Short.MAX_VALUE))
        );
        PanelRegistroMedicoLayout.setVerticalGroup(
            PanelRegistroMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroMedicoLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelDatosPersonales.setBackground(new java.awt.Color(0, 102, 102));
        PanelDatosPersonales.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("EVALUACIÓN INICIAL DE LA CICATRIZ:");

        btnGuardar.setBackground(new java.awt.Color(46, 68, 82));
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardar.setBorderPainted(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        box_cicatriz.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activa Plana", "Hipertrófica", "Estable", "Madura", "Queloide", "Atrófica" }));

        table_vancouver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Vancouver", "Resultado", "Vancouver Modificado", null, null},
                {"0-1", "Excelente", "0-8", null, null},
                {"2-4", "Bien", "9-17", null, null},
                {"5-7", "Regular", "18-26", null, null},
                {"8-10", "Mala", "27-34", null, null}
            },
            new String [] {
                "Vascularidad Rango (0-3)", "", "Consistencia Rango (0-4)", "", "Altura Rango (0-3)"
            }
        ));
        jScrollPane3.setViewportView(table_vancouver);

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("TRATAMIENTO INDICADO:");

        box_tratamiento_i.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mallas de presión", "Inmovilizador", "Fisioterapia", "Cirugia", "Con Inserto", "Férulas", "T.O", "Otros", "Sin Inserto", "Mascara Uvex", "Psicología", "Cuello Uvex", "Curación" }));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("OBSERVACIONES:");

        txt_indicaciones.setColumns(20);
        txt_indicaciones.setRows(5);
        jScrollPane1.setViewportView(txt_indicaciones);

        btnAnterior.setBackground(new java.awt.Color(46, 68, 82));
        btnAnterior.setForeground(new java.awt.Color(255, 255, 255));
        btnAnterior.setText("Anterior");
        btnAnterior.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAnterior.setBorderPainted(false);
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelDatosPersonalesLayout = new javax.swing.GroupLayout(PanelDatosPersonales);
        PanelDatosPersonales.setLayout(PanelDatosPersonalesLayout);
        PanelDatosPersonalesLayout.setHorizontalGroup(
            PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(box_cicatriz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(box_tratamiento_i, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(734, Short.MAX_VALUE))
                    .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(735, Short.MAX_VALUE))
                    .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        PanelDatosPersonalesLayout.setVerticalGroup(
            PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                .addGroup(PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDatosPersonalesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(box_cicatriz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(box_tratamiento_i, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 51, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDatosPersonalesLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PanelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(PanelRegistroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelDatosPersonales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelRegistroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelDatosPersonales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        //agregar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAnteriorActionPerformed

    //metodo para agregar.
    /*void agregar() {

        try {
            // Obtener la fecha desde el JTextField
            String fechaIngresoHStr = txtFechaIngresoH.getText();
            String fechaIngresoUnidad = txtFechaIngresoQ.getText();
            String fechaEgresoUnidad = txtFechaEgresoQ.getText();
            String fechaNacimiento = txtFechaNacimiento.getText();

            // Convertir la cadena de texto a LocalDate
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate fechaIngresoH = LocalDate.parse(fechaIngresoHStr, formatter);
            LocalDate fechaIngresoQ = LocalDate.parse(fechaIngresoUnidad, formatter);
            LocalDate fechaEgresoQ = LocalDate.parse(fechaEgresoUnidad, formatter);
            LocalDate fechaNacim = LocalDate.parse(fechaNacimiento, formatter);

            //Array para almacenar los valores de todos los TextFields 
            Object[] ob = new Object[]{
                txtRegistro.getText(), fechaIngresoH, fechaIngresoQ,
                fechaEgresoQ, txtNombrePaciente.getText(), txtApellidosPaciente.getText(),
                Integer.parseInt(txtEdad.getText()), (String) txtSexo.getSelectedItem(),
                fechaNacim, txtDireccion.getText(), txtAldea.getText(),
                txtMunicipio.getText(), txtDepartamento.getText(), Integer.parseInt(txtTelefono.getText()),
                Integer.parseInt(txtNoMiembros.getText()), Integer.parseInt(txtAdultos.getText()),
                Integer.parseInt(txtNinos.getText()), Integer.parseInt(txtNoHijos.getText()), Integer.parseInt(txtLugarOcupa.getText()),
                opcionSeleccionada, txtReferido.getText(), txtEncargado.getText(),
                txtParentesco.getText(), Integer.parseInt(txtEdadEncargado.getText()),
                (String) txtEscolaridad.getSelectedItem(), txtOcupacion.getText()
            };

            paciente.agregar(ob);
            //Revisa si el campo de Registro medico esta vacio, y lanza error si es asi. 
            if (txtRegistro.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El campo 'Registro Médico' no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                //Si todo esta correcto se lanza un mensaje de afirmacion y se limpian los campos 
                JOptionPane.showMessageDialog(null, "Paciente Registrado con exito!");
                limpiarCampos();
            }
        } catch (Exception e) {
            // Si hay una excepción, mostrar un cuadro de diálogo de error
            JOptionPane.showMessageDialog(null, "Error al registrar al paciente: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Imprimir la traza de la excepción en la consola (puedes quitar esto en producción)
        }

    }*/

    //metodo para limpiar los campos
    /*void limpiarCampos() {
        txtRegistro.setText("");
        txtFechaIngresoH.setText("");
        txtFechaIngresoQ.setText("");
        txtFechaEgresoQ.setText("");
        txtNombrePaciente.setText("");
        txtApellidosPaciente.setText("");
        txtEdad.setText("");
        txtSexo.setSelectedIndex(0);
        txtFechaNacimiento.setText("");
        txtDireccion.setText("");
        txtAldea.setText("");
        txtMunicipio.setText("");
        txtDepartamento.setText("");
        txtTelefono.setText("");
        txtNoMiembros.setText("");
        txtAdultos.setText("");
        txtNinos.setText("");
        txtNoHijos.setText("");
        txtLugarOcupa.setText("");
        buttonGroup.clearSelection();
        txtReferido.setText("");
        txtEncargado.setText("");
        txtParentesco.setText("");
        txtEdadEncargado.setText("");
        txtEscolaridad.setSelectedIndex(0);
        txtOcupacion.setText("");
    }*/


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelDatosPersonales;
    private javax.swing.JPanel PanelRegistroMedico;
    private javax.swing.JComboBox<String> box_cicatriz;
    private javax.swing.JComboBox<String> box_tratamiento_i;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable table_procedimiento;
    private javax.swing.JTable table_vancouver;
    private javax.swing.JTextArea txt_indicaciones;
    // End of variables declaration//GEN-END:variables
}
